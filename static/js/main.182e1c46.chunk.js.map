{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","components/StaffsComponent.js","components/StaffDetailComponent.js","components/DepartmentComponent.js","components/StaffOfDepartmentComponent.js","components/SalaryComponent.js","components/FooterComponent.js","redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreators.js","components/MainComponent.js","redux/staffs.js","redux/departments.js","shared/Image.js","redux/homeBackground.js","redux/deptImg.js","redux/staffsSalary.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","Component","Loading","required","val","isNumber","isNaN","Number","salaryScaleValid","FormComponent","isModalOpen","doB","startDate","searchValue","handleSubmitSearch","handleToggleModal","handleSubmitAdd","e","preventDefault","fullName","value","values","target","name","postStaff","departmentId","salaryScale","annualLeave","overTime","staffId","onDelete","max","min","staffs","list","filter","staff","toLowerCase","includes","map","RenderStaff","item","id","color","onSubmit","type","placeholder","innerRef","input","toggle","htmlFor","md","text","model","validators","minLength","length","maxLength","show","messages","onChange","modelValue","handleInputChange","select","defaultValue","in","transformProps","exitTransForm","image","tag","indexOf","size","Staffs","isLoading","errMess","changeInfo","departments","onChangeInfo","dateFormat","position","departmentName","find","department","disabled","StaffDetail","useState","setToggleModal","setDoB","setStartDate","active","RenderDepartment","deptImages","deptClass","DeptImg","deptImage","img","numberOfStaff","Department","departmentList","RenderStaffOfDep","StaffOfDepartment","console","log","items","staffsSalary","salary","Salary","sortValue","onSort","sort","a","b","listRender","staffSalary","row","for","sm","lg","Footer","ADD_STAFF","ADD_STAFFS","STAFFS_LOADING","STAFFS_FAILED","ADD_DEPARTMENTS","DEPARTMENTS_LOADING","DEPARTMENTS_FAILED","DELETE_STAFF","ADD_STAFFSSALARY","STAFFSSALARY_LOADING","STAFFSSALARY_FAILED","baseUrl","dispatch","staffsLoading","newStaff","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","message","json","ActionTypes","payload","addStaff","fetchStaffsSalary","fetchDepartments","catch","staffsFailed","addStaffs","errmess","departmentsLoading","addDepartments","departmentsFailed","staffsSalaryLoading","addStaffsSalary","staffsSalaryFailed","Main","fetchStaffs","classNames","timeout","exact","path","component","match","parseInt","params","location","key","withRouter","connect","homeImage","staffChanged","testurl","statusText","alert","action","concat","_id","splice","Departments","HOME_IMAGE","DEPT_IMAGES","HomeBackground","DeptImages","StaffsSalary","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.182e1c46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavbarToggler, Collapse, NavItem, NavbarBrand } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n// Hàm tạo Navbar\r\nclass Header extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    };\r\n\r\n    toggleNav () {\r\n        this.setState({ isNavOpen: !this.state.isNavOpen });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container header\" >\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className='mr-auto' href=\"/home\">\r\n                            <img src='assets/images/logo.png' height='30' width='41' alt=\"Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/staffs'><span className='fa fa-users fa-lg'></span> Nhân viên</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/departments'><span className='fa fa-id-card-o fa-lg'></span> Phòng ban</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/salary'><span className='fa fa-money fa-lg'></span> Bảng lương</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                        <h5 className='appName'>Ứng dụng quản lý nhân sự V1.0</h5>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div>\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . . </p>\r\n        </div>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport {Card, CardBody, CardTitle, CardImg, \r\n        InputGroup, Input, Button, \r\n        Form, FormGroup, Label, Row, Col,\r\n        Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {LocalForm, Control, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\n// Validate Form\r\nconst required = (val) => val;\r\nconst minLength = (min) => (val) => !(val) || (val.length >= min);\r\nconst maxLength = (max) => (val) => !(val) || (val.length < max);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst salaryScaleValid = (val) => Number(val) >= 1.0 && Number(val) <= 3.0;\r\n\r\n// Form tìm kiếm và Thêm nhân viên mới.\r\nclass FormComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            isModalOpen: false,\r\n            doB: '',\r\n            startDate: '',\r\n            searchValue: ''\r\n        }\r\n        this.handleSubmitSearch = this.handleSubmitSearch.bind(this);\r\n        this.handleToggleModal = this.handleToggleModal.bind(this);\r\n        this.handleSubmitAdd = this.handleSubmitAdd.bind(this);\r\n    }\r\n\r\n// Hàm xử lý Submit Uncontrolled Form (Form Tìm kiếm nhân viên)\r\n    handleSubmitSearch (e) {\r\n        e.preventDefault(); \r\n        this.setState({\r\n            searchValue: this.fullName.value,\r\n        })\r\n    };\r\n\r\n// Hàm đóng/ mở Form Thêm nhân viên\r\n    handleToggleModal() {\r\n            this.setState({\r\n                isModalOpen: !this.state.isModalOpen,\r\n            })\r\n    };\r\n    \r\n// Hàm xử lý, lấy dữ liệu đầu vào Controlled Form (Form Thêm nhân viên).\r\n    handleInputChange(values) {\r\n        const target = values.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n// Hàm xử lý Submit Controlled Form (Form THêm nhân viên)\r\n    handleSubmitAdd(values) {\r\n        this.props.postStaff(values.name, values.doB, values.startDate, values.departmentId, values.salaryScale, values.annualLeave, values.overTime);\r\n    };\r\n\r\n    onDelete(staffId) {\r\n        this.props.onDelete(staffId);\r\n    }\r\n\r\n// Hiển thị ra view của component FormComponent\r\n    render() {\r\n        if(this.props.staffs){\r\n            const filtered = !this.state.searchValue\r\n                ? this.props.staffs \r\n                : this.props.staffs.filter((staff) => \r\n                    staff.name.toLowerCase().includes(this.state.searchValue.toLowerCase())\r\n                );\r\n            var list = filtered.map((staff) => {\r\n                return (\r\n                    <div  key={staff.id}  className=\"col-6 col-md-4 col-lg-2 staff\">\r\n                        <RenderStaff item={staff} onDelete = { (staffId) => this.onDelete(staffId)}\r\n                                    staffs={this.props.staffs}/>\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6 header-add\">\r\n                        <h3>Nhân viên</h3>\r\n                        <Button color=\"success\" onClick={this.handleToggleModal}>\r\n                            <i className=\"fa fa-plus-square\" aria-hidden=\"true\"></i>\r\n                            {' '}\r\n                            Thêm nhân viên\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <Form onSubmit={this.handleSubmitSearch}>\r\n                            <FormGroup>\r\n                                <InputGroup>\r\n                                    <Input \r\n                                        type=\"text\" \r\n                                        placeholder=\"Nhập tên nhân viên...\"\r\n                                        innerRef={(input) => this.fullName = input}/>\r\n                                    <Button type=\"submit\" color=\"primary\">Tìm kiếm</Button>\r\n                                </InputGroup>   \r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div className=\"row\">\r\n                    {list}\r\n                </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.handleToggleModal}>\r\n                    <ModalHeader toggle={this.handleToggleModal}>Thêm nhân viên</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.handleSubmitAdd}>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"name\" md={4}>Tên</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\" \r\n                                        placeholder=\"Nhập họ tên nhân viên\"\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model=\".name\"\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Yêu cầu nhập!\",\r\n                                            minLength:'Yêu cầu nhiều hơn 2 ký tự!',\r\n                                            maxLength: 'Yêu cầu ít hơn 30 ký tự!',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"doB\" md={4}>Ngày sinh</Label>\r\n                                <Col md={8}>\r\n                                    <Control type='date' model=\".doB\" id=\"doB\" name=\"doB\"\r\n                                        className='form-control'\r\n                                        value={this.state.doB}\r\n                                        onChange={(modelValue) => this.handleInputChange(modelValue)}\r\n                                        validators={{\r\n                                            required,\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model='.doB'\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Yêu cầu nhập!',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"startDate\" md={4}>Ngày vào công ty</Label>\r\n                                <Col md={8}>\r\n                                    <Control type=\"date\" model='.startDate' id=\"startDate\" name=\"startDate\" \r\n                                        value={this.state.startDate}\r\n                                        className='form-control'\r\n                                        onChange={(modelValue) => this.handleInputChange(modelValue)}\r\n                                        validators={{\r\n                                            required,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.startDate'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Yêu cầu nhập!',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"department\" md={4}>Phòng ban</Label>\r\n                                <Col md={8}>\r\n                                    <Control.select model=\".departmentId\" name=\"departmentId\" id=\"departmentId\"\r\n                                                    className=\"form-control\"\r\n                                                    defaultValue='Dept01'\r\n                                                    onChange={(modelValue) => this.handleInputChange(modelValue)}\r\n                                                    >\r\n                                        <option value=\"Dept01\">Sale</option>\r\n                                        <option value=\"Dept03\">Marketing</option>\r\n                                        <option value=\"Dept05\">Finance</option>\r\n                                        <option value=\"Dept02\">HR</option>\r\n                                        <option value=\"Dept04\">IT</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"salaryScale\" md={4}>Hệ số lương</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".salaryScale\" \r\n                                        id=\"salaryScale\" name=\"salaryScale\" \r\n                                        placeholder=\"1.0 đến 3.0\"\r\n                                        className=\"form-control\"\r\n                                        defaultValue={1.0}\r\n                                        validators={{\r\n                                            isNumber, salaryScaleValid,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.salaryScale'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            isNumber: 'Trường này phải có giá trị là số!',\r\n                                            salaryScaleValid: 'Hệ số lương từ 1.0 đến 3.0'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"annualLeave\" md={4}>Số ngày nghỉ còn lại</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".annualLeave\" id=\"annualLeave\" name=\"annualLeave\" \r\n                                        placeholder=\"1.0\"\r\n                                        className='form-control'\r\n                                        defaultValue={0}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"overTime\" md={4}>Số ngày đã làm thêm</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".overTime\" id=\"overTime\" name=\"overTime\" \r\n                                        placeholder=\"1.0\"\r\n                                        className='form-control'\r\n                                        defaultValue={0}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <hr/>\r\n                            <Row className='form-group m-1'>\r\n                                <Button type=\"submit\" value='submit' color=\"primary\">\r\n                                   Thêm\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n// Hàm hiển thị ảnh, Họ và tên, Mã NV của từng nhân viên.\r\nfunction RenderStaff ({ staffs, item, onDelete }) {\r\n    return(\r\n        <FadeTransform in\r\n                        transformProps={{exitTransForm: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card id={item.id} className=\"Dept01\">\r\n                <CardBody>\r\n                    <CardImg src={item.image} alt={item.name}/>\r\n                    <CardTitle tag=\"p\">\r\n                        {item.name}\r\n                    </CardTitle>\r\n                    <CardTitle tag=\"p\">\r\n                        Mã NV: {staffs.indexOf(item)}\r\n                    </CardTitle>\r\n                    <div className=\"hide-show-btn\">\r\n                        <Link to={`/staffs/${item.id}`}>\r\n                            <Button color=\"primary m-2\" size=\"sm\">Chi tiết</Button>\r\n                        </Link>\r\n                        <Button color=\"danger\" size=\"sm\" onClick = {() => {onDelete(item.id)}}>Xóa</Button>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n};\r\n\r\n// Hàm xử lý lọc nhân viên, sắp xếp nhân viên theo vị trí và hiển thị toàn bộ nhân viên.\r\nfunction Staffs(props) {\r\n    if (props.staffs.isLoading === true) {\r\n        return (\r\n            <div className=\"container container-content p-4 text-center\">\r\n                <Loading/>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.staffs.errMess) {\r\n        return(\r\n            <div className=\"container container-content p-4 text-center\">\r\n                <h4>{props.staffs.errMess}</h4>\r\n            </div>\r\n        );\r\n    } else\r\n    return(\r\n        <div className=\"container container-content\">\r\n            <FormComponent \r\n                staffs={props.staffs.staffs}\r\n                postStaff={props.postStaff}\r\n                onDelete={props.onDelete}\r\n                changeInfo={props.changeInfo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Staffs;","import React, {useState} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardImg, CardBody, Button,\r\n        Modal, ModalHeader, ModalBody,\r\n        Row, Col, Label} from 'reactstrap';\r\nimport { LocalForm, Control, Errors} from 'react-redux-form'\r\nimport dateFormat from 'dateformat';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// Hàm hiển thị thông tin chi tiết của nhân viên.\r\nfunction RenderStaff({staff, departments, onChangeInfo }) {\r\n    let doB = dateFormat(staff.doB, \"dd/mm/yyyy\");\r\n    let startDate = dateFormat(staff.startDate, \"dd/mm/yyyy\");\r\n    let position = staff.salaryScale > 1 ? \"Quản lý\" : \"Nhân viên\";\r\n    let department = departments.find((department) => {\r\n        return department.id === staff.departmentId;\r\n    });\r\n    let departmentName = department.name;\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-12 col-md-4 col-lg-3 m-auto\">\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardImg src={staff.image} alt={staff.name} />\r\n                    </CardBody>\r\n                    <Button color=\"success\" onClick={onChangeInfo}>Cập Nhật</Button>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-8 col-lg-9 p-3\">\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Họ và tên</span>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" name=\"usrname\" value={staff.name} disabled />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Vị trí</span>\r\n                    <input type=\"text\" className=\"form-control\" value={position} disabled />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Ngày sinh</span>\r\n                    <input type=\"text\" className=\"form-control\" value={doB} disabled />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Ngày vào công ty</span>\r\n                    <input type=\"text\" className=\"form-control\" value={startDate} disabled />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Phòng ban</span>\r\n                    <input type=\"text\" className=\"form-control\" value={departmentName} disabled />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Số ngày nghỉ còn lại</span>\r\n                    <input type=\"text\" className=\"form-control\" value={staff.annualLeave} disabled />\r\n                </div>\r\n                <div className=\"input-group mb-1\">\r\n                    <span className=\"input-group-text\">Số ngày đã làm thêm</span>\r\n                    <input type=\"text\" className=\"form-control\" value={staff.overTime} disabled />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Hàm xử lý và hiển thị thông tin chi tiết của nhân viên.\r\nconst StaffDetail = (props) => {\r\n    let staff = props.staff;\r\n    \r\n    // Validate Form\r\n    const required = (val) => val !== '';\r\n    const minLength = (min) => (val) => !(val) || (val.length >= min);\r\n    const maxLength = (max) => (val) => !(val) || (val.length < max);\r\n    const isNumber = (val) => !isNaN(Number(val));\r\n    const salaryScaleValid = (val) => Number(val) >= 1.0 && Number(val) <= 3.0;\r\n\r\n    const [ isModalOpen, setToggleModal ] = useState(false);\r\n    const [ doB, setDoB ] = useState(dateFormat(props.staff.doB, \"yyyy-mm-dd\"));\r\n    const [ startDate, setStartDate ] = useState(dateFormat(props.staff.startDate, \"yyyy-mm-dd\"));\r\n    \r\n    function handleToggleModal () {\r\n        setToggleModal(!isModalOpen);\r\n    }\r\n    \r\n    function onChangeInfo() {\r\n        handleToggleModal()\r\n    };\r\n\r\n    function handleInputChange (values) {\r\n        const target = values.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        if(name === 'doB') {\r\n            setDoB(value);\r\n        }\r\n        else if(name === 'startDate') {\r\n            setStartDate(value);\r\n        }\r\n        // setDoB([name], value);\r\n        // setStartDate([name], value);\r\n\r\n    };\r\n\r\n   function onSubmit(values) {\r\n       props.changeInfo(staff.id, values.name, values.doB, values.startDate, values.departmentId, values.salaryScale, values.annualLeave, values.overTime);\r\n       handleToggleModal()\r\n   }\r\n\r\n    if (staff != null) {\r\n        return(\r\n            <div className=\"container container-content\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                        <Link to='/staffs'>Nhân viên</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{staff.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <hr/>  \r\n                <div className=\"row\">\r\n                    <div className=\"col-12 \">\r\n                        <h3>Thông tin cơ bản</h3>\r\n                    </div>\r\n                </div> \r\n                <RenderStaff staff={staff} departments={props.departments.departments} onChangeInfo={onChangeInfo}/>\r\n                <Modal isOpen={isModalOpen} toggle={handleToggleModal}>\r\n                    <ModalHeader toggle={handleToggleModal}>Cập nhật thông tin</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={onSubmit}>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"name\" md={4}>Tên</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\" \r\n                                        placeholder=\"Nhập họ tên nhân viên\"\r\n                                        className='form-control'\r\n                                        defaultValue={props.staff.name}\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model=\".name\"\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Yêu cầu nhập!\",\r\n                                            minLength:'Yêu cầu nhiều hơn 2 ký tự!',\r\n                                            maxLength: 'Yêu cầu ít hơn 30 ký tự!',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"doB\" md={4}>Ngày sinh</Label>\r\n                                <Col md={8}>\r\n                                    <Control type='date' model=\".doB\" id=\"doB\" name=\"doB\"\r\n                                        className='form-control'\r\n                                        defaultValue={doB}\r\n                                        value={doB}\r\n                                        onChange={(modelValue) => handleInputChange(modelValue)}\r\n                                        validators={{\r\n                                            required,\r\n                                        }}\r\n                                    />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model='.doB'\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Yêu cầu nhập!',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"startDate\" md={4}>Ngày vào công ty</Label>\r\n                                <Col md={8}>\r\n                                    <Control type=\"date\" model='.startDate' id=\"startDate\" name=\"startDate\" \r\n                                        defaultValue={startDate}\r\n                                        value={startDate}\r\n                                        className='form-control'\r\n                                        onChange={(modelValue) => handleInputChange(modelValue)}\r\n                                        validators={{\r\n                                            required,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.startDate'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: 'Yêu cầu nhập!',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"department\" md={4}>Phòng ban</Label>\r\n                                <Col md={8}>\r\n                                    <Control.select model=\".departmentId\" name=\"departmentId\" id=\"departmentId\"\r\n                                                    className=\"form-control\"\r\n                                                    defaultValue={props.staff.departmentId}\r\n                                                    onChange={(modelValue) => handleInputChange(modelValue)}\r\n                                                    >\r\n                                        <option value=\"Dept01\">Sale</option>\r\n                                        <option value=\"Dept03\">Marketing</option>\r\n                                        <option value=\"Dept05\">Finance</option>\r\n                                        <option value=\"Dept02\">HR</option>\r\n                                        <option value=\"Dept04\">IT</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Label htmlFor=\"salaryScale\" md={4}>Hệ số lương</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".salaryScale\" \r\n                                        id=\"salaryScale\" name=\"salaryScale\" \r\n                                        placeholder=\"1.0 đến 3.0\"\r\n                                        className=\"form-control\"\r\n                                        defaultValue={props.staff.salaryScale}\r\n                                        validators={{\r\n                                            isNumber, salaryScaleValid,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.salaryScale'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            isNumber: 'Trường này phải có giá trị là số!',\r\n                                            salaryScaleValid: 'Hệ số lương từ 1.0 đến 3.0'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"annualLeave\" md={4}>Số ngày nghỉ còn lại</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".annualLeave\" id=\"annualLeave\" name=\"annualLeave\" \r\n                                        placeholder=\"1.0\"\r\n                                        className='form-control'\r\n                                        defaultValue={props.staff.annualLeave}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"overTime\" md={4}>Số ngày đã làm thêm</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".overTime\" id=\"overTime\" name=\"overTime\" \r\n                                        placeholder=\"1.0\"\r\n                                        className='form-control'\r\n                                        defaultValue={props.staff.overTime}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <hr/>\r\n                            <Row className='form-group m-1'>\r\n                                <Button type=\"submit\" value='submit' color=\"primary\">\r\n                                    Cập nhật\r\n                                </Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    } else {\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StaffDetail;","import React from 'react';\r\nimport {Card, CardBody, CardTitle, CardText, CardImg} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n// Hàm hiển thị từng phòng ban.\r\nfunction RenderDepartment({department, deptImages}) {\r\n    let deptClass = department.id === \"Dept01\" ? \"dept01\" :\r\n                    department.id === \"Dept02\" ? \"antiquewhite\" :\r\n                    department.id === \"Dept03\" ? \"aqua\" :\r\n                    department.id === \"Dept04\" ? \"quamarine\" : \"yellow\";\r\n    let DeptImg = deptImages.find((deptImage) => deptImage.id === department.id);\r\n\r\n    return(\r\n        <Link to={`/departments/${department.id}`}>\r\n        <FadeTransform in\r\n                        transformProps={{exitTransForm: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card className={deptClass}>\r\n                <CardBody>\r\n                    <CardImg src={DeptImg.img} alt={department.name} className=\"departmentImg\"/>\r\n                    <CardTitle>{department.name} Department</CardTitle>\r\n                    <CardTitle>ID: {department.id}</CardTitle>\r\n                    <CardText>Số lượng nhân viên: {department.numberOfStaff}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        </Link>\r\n    );\r\n}\r\nfunction Department(props) {\r\n    const departmentList = props.departments.departments.map((department) => {\r\n        return (\r\n        <div key={department.id} className=\"col-12 col-md-6 col-lg-4 staff\">\r\n            <RenderDepartment department={department} deptImages={props.deptImages}/>\r\n        </div>\r\n        );\r\n    });\r\n    \r\n    if (props.departments.isLoading === true) {\r\n        return (\r\n            <div className=\"container container-content p-4 text-center\">\r\n                <Loading/>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.departments.errMess) {\r\n        return(\r\n            <div className=\"container container-content p-4 text-center\">\r\n                <h4>{props.departments.errMess}</h4>\r\n            </div>\r\n        );\r\n    } else\r\n    return(                \r\n        <div className=\"container container-content\">\r\n            <div className=\"row\">\r\n            <div className=\"col-12 \">\r\n                <h3 className=\"text-center\">Phòng ban</h3>\r\n                <hr/>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\"> \r\n                {departmentList}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Department;","import React from 'react';\r\nimport {Card, CardBody, CardTitle, CardImg, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n// Hàm hiển thị từng nhân viên của phòng ban.\r\nfunction RenderStaffOfDep({item}) {\r\n    let department = item.department === \"Sale\" ? \"dept01\" :\r\n                    item.department === \"HR\" ? \"antiquewhite\" :\r\n                    item.department === \"Marketing\" ? \"aqua\" :\r\n                    item.department === \"IT\" ? \"aquamarine\" : \"yellow\";\r\n    return(\r\n        <Card id={item.id} className=\"Dept01\">\r\n            <CardBody>\r\n                <CardImg src={item.image} alt={item.name}/>\r\n                <CardTitle tag=\"p\" className={department}>\r\n                    {item.name}\r\n                </CardTitle>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\n// Hàm xử lý và hiển thị tất cả các nhân viên của phòng ban.\r\nfunction StaffOfDepartment(props) {\r\n    console.log(props.department)\r\n    const list = props.items.map((item) => {\r\n        return (\r\n            <div key={item.id} className=\"col-6 col-md-4 col-lg-2 staff\">\r\n                <RenderStaffOfDep item={item} />\r\n            </div>\r\n        );\r\n    })\r\n    return(\r\n        <div className=\"container container-content\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                    <Link to='/departments'>Phòng ban</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.department.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 \">\r\n                    <h3>Danh sách nhân viên phòng {props.department.name}</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\"> \r\n                {list}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StaffOfDepartment;","import React, {useState} from 'react';\r\nimport {Card, CardBody, CardTitle, CardText, CardImg,\r\n        InputGroup, InputGroupText, Input, \r\n        Breadcrumb, BreadcrumbItem,\r\n        FormGroup, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\n// Hàm hiển thị bảng lương của từng nhân viên.\r\nfunction RenderStaff ({item, staffsSalary}) {\r\n    let department = item.departmentId === \"Dept01\" ? \"dept01\" :\r\n                    item.departmentId === \"Dept02\" ? \"antiquewhite\" :\r\n                    item.departmentId === \"Dept03\" ? \"aqua\" :\r\n                    item.departmentId === \"Dept04\" ? \"aquamarine\" : \"yellow\";\r\n    let departmentName = item.departmentId === \"Dept01\" ? \"Sale\" :\r\n                        item.departmentId === \"Dept02\" ? \"HR\" :\r\n                        item.departmentId === \"Dept03\" ? \"Marketing\" :\r\n                        item.departmentId === \"Dept04\" ? \"IT\" : \"Finance\"; \r\n \r\n    return(\r\n        <FadeTransform in\r\n                        transformProps={{exitTransForm: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card id={item.id}>\r\n                <CardBody className={department}>\r\n                    <CardTitle>Họ và tên: {item.name}</CardTitle>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <CardImg src={item.image} alt={item.name}/>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <CardText>Phòng ban: {departmentName}</CardText>\r\n                            <CardText>Mã nhân viên: {staffsSalary.staffsSalary.indexOf(item)}</CardText>\r\n                            <CardText>Hệ số lương: {item.salaryScale}</CardText>\r\n                            <CardText>Số giờ làm thêm: {item.overTime}</CardText>\r\n                        </div>\r\n                    </div>\r\n                    <InputGroup className={department}>\r\n                        <InputGroupText>Lương</InputGroupText>\r\n                        <Input value={`${item.salary} VNĐ`} disabled className=\"text-center\"/>\r\n                    </InputGroup>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n};\r\n\r\n// Hàm xử lý, sắp xếp và hiển thị thông tin bảng lương của toàn bộ nhân viên.\r\nfunction Salary(props) {\r\n    const [sortValue, onSort] = useState('staffId');\r\n    if(props.staffsSalary.staffsSalary) {\r\n        function onSortChange(e) {\r\n            onSort(e.target.value);\r\n        }; \r\n        \r\n        sortValue === \"highToLow\" ? props.staffsSalary.staffsSalary.sort((a,b)=> a.salary > b.salary ? -1 : 1) \r\n        : sortValue === \"lowToHigh\" ? props.staffsSalary.staffsSalary.sort((a,b)=> a.salary > b.salary ? 1 : -1)\r\n        : sortValue === \"department\" ? props.staffsSalary.staffsSalary.sort((a,b) => a.department > b.department ? 1 : -1)\r\n        : sortValue === \"nameAToZ\" ? props.staffsSalary.staffsSalary.sort((a,b) => a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1)\r\n        : sortValue === \"nameZToA\" ? props.staffsSalary.staffsSalary.sort((a,b) => a.name.toLowerCase() > b.name.toLowerCase() ? -1 : 1)\r\n        : props.staffsSalary.staffsSalary.sort((a,b)=> a.id > b.id ? 1 : -1);\r\n    \r\n        const listRender = props.staffsSalary.staffsSalary.map((staffSalary) =>{\r\n            return(\r\n                <div  key={staffSalary.id}  className=\"col-12 col-md-6 col-lg-4 staff\">\r\n                    <RenderStaff item={staffSalary} staffsSalary={props.staffsSalary}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (props.staffsSalary.isLoading) {\r\n            return (\r\n                <div className=\"container container-content p-4 text-center\">\r\n                    <Loading/>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.staffsSalary.errMess) {\r\n            return(\r\n                <div className=\"container container-content p-4 text-center\">\r\n                    <h4>{props.staffsSalary.errMess}</h4>\r\n                </div>\r\n            );\r\n        } else\r\n            return(\r\n                <div className=\"container container-content\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                            <Link to='/staffs'>Nhân viên</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>Bảng lương</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 m-auto\">\r\n                            <h3>Bảng lương</h3>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 m-auto\">\r\n                            <FormGroup row>\r\n                                <Label for=\"salarySelect\" sm={12} md={4} lg={3}>\r\n                                    Sắp xếp theo: \r\n                                </Label>\r\n                                <Col sm={12} md={8} lg={9}>\r\n                                    <Input\r\n                                    id=\"salarySelect\"\r\n                                    name=\"select\"\r\n                                    type=\"select\"\r\n                                    onChange={onSortChange}\r\n                                    >\r\n                                        <option value=\"staffId\"> Mã nhân viên</option>\r\n                                        <option value=\"lowToHigh\">Mức lương tăng dần</option>\r\n                                        <option value=\"highToLow\">Mức lương giảm dần</option>\r\n                                        <option value=\"department\">Phòng ban</option>\r\n                                        <option value=\"nameAToZ\">Tên từ A - Z</option>\r\n                                        <option value=\"nameZToA\">Tên từ Z - A</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\"> \r\n                        {listRender}\r\n                    </div>\r\n                </div>\r\n            );\r\n    } else {\r\n        return (\r\n            <div className=\"row\">\r\n            </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Salary;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Hàm tạo chân trang.\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Link</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/staffs\">Nhân viên</Link></li>\r\n                            <li><Link to=\"/departments\">Phòng ban</Link></li>\r\n                            <li><Link to=\"/salary\">Bảng lương</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Addresses</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br/>\r\n                            Clear Water Bay, Kowloon<br/>\r\n                            HONG KONG<br/>\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: <a href=\"tel:+852 1234 5678\">+852 1234 5678</a><br/>\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br/>\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a> \r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\">\r\n                                <i className=\"fa fa-google-plus\"></i>\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\">\r\n                                <i className=\"fa fa-facebook\"></i>\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\">\r\n                                <i className=\"fa fa-linkedin\"></i>\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\">\r\n                                <i className=\"fa fa-twitter\"></i>\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\">\r\n                                <i className=\"fa fa-youtube\"></i>\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\">\r\n                                <i className=\"fa fa-envelope-o\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","export const ADD_STAFF = 'ADD_STAFF';\r\nexport const ADD_STAFFS = 'ADD_STAFFS';\r\nexport const STAFFS_LOADING = 'STAFFS_LOADING';\r\nexport const STAFFS_FAILED = 'STAFFS_FAILED';\r\nexport const ADD_DEPARTMENTS = 'ADD_DEPARTMENTS';\r\nexport const DEPARTMENTS_LOADING = 'DEPARTMENTS_LOADING';\r\nexport const DEPARTMENTS_FAILED = 'DEPARTMENTS_FAILED';\r\nexport const DELETE_STAFF = 'DELETE_STAFF';\r\nexport const ADD_STAFFSSALARY = 'ADD_STAFFSSALARY';\r\nexport const STAFFSSALARY_LOADING = 'STAFFSSALARY_LOADING';\r\nexport const STAFFSSALARY_FAILED = 'STAFFSSALARY_FAILED';","export const baseUrl = 'https://rjs101xbackend.herokuapp.com/';","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport dateFormat  from \"dateformat\";\r\n\r\nexport const addStaff = (staff) => ({\r\n    type: ActionTypes.ADD_STAFF,\r\n    payload: staff\r\n})\r\n\r\nexport const postStaff = (name, doB, startDate, departmentId, salaryScale, annualLeave, overTime) => (dispatch) => {\r\n    dispatch(staffsLoading(true));\r\n    const newStaff = {\r\n        name: name,\r\n        doB: doB,\r\n        startDate: startDate,\r\n        departmentId: departmentId,\r\n        salaryScale: salaryScale,\r\n        annualLeave: annualLeave,\r\n        overTime: overTime,\r\n    }\r\n    newStaff.image = \"/assets/images/staff_img.jpg\"; \r\n\r\n        return fetch(baseUrl + 'staffs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(newStaff),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }, \r\n            credentials: 'same-origin',\r\n        })\r\n            .then(response => {\r\n                    if(response.ok) {\r\n                        return response;\r\n                    }\r\n                    else {\r\n                        var error = new Error('Error ' + response.status + ': ' + response.message);\r\n                        error.response = response;\r\n                        throw error;\r\n                    }\r\n                }, \r\n                error => {\r\n                    var errmess = new Error(error.message);\r\n                    throw errmess;\r\n                })\r\n                .then(response => response.json())\r\n                .then(staff => dispatch(addStaff(staff)))\r\n                .then(() => dispatch(fetchStaffsSalary()))\r\n                .then(() => dispatch(fetchDepartments()))\r\n                .catch(error => dispatch(staffsFailed(error.message)))\r\n}\r\n\r\nexport const changeInfo = (staffId, name, doB, startDate, departmentId, salaryScale, annualLeave, overTime) => (dispatch) => {\r\n    \r\n    const staffChanged = {\r\n        name: name,\r\n        doB: dateFormat(doB, \"dd/mm/yyyy\"),\r\n        startDate: dateFormat(startDate, \"dd/mm/yyyy\"),\r\n        departmentId: departmentId,\r\n        salaryScale: salaryScale,\r\n        annualLeave: annualLeave,\r\n        overTime: overTime,\r\n    }\r\n    staffChanged.image = \"/assets/images/alberto.png\"; \r\n    let testurl =  baseUrl + 'staffs/' + staffId;\r\n    console.log('TEST  URL ' + testurl);\r\n    console.log('STAFF CHANGE ' + JSON.stringify(staffChanged));\r\n        \r\n        return fetch(baseUrl + 'staffs/' + staffId, {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(staffChanged),\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"https://rjs101xbackend.herokuapp.com\",\r\n                \"Access-Control-Allow-Credentials\": \"true\",\r\n                \"Access-Control-Allow-Methods\": \"GET,HEAD,OPTIONS,POST,PUT\",\r\n                \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept, Authorization\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: \"same-origin\"\r\n            })\r\n            .then(response => {\r\n            if (response.ok) {\r\n            return response;\r\n            } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n            }\r\n            },\r\n            error => {\r\n            throw error;\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => console.log('RESPONSE ' + response))\r\n            // .then(() => dispatch(fetchStaffsSalary()))\r\n            // .then(() => dispatch(fetchDepartments()))\r\n            .catch(error => { console.log('CHANGE STAFF', error.message); alert('Your update is failed\\nError: ' + error.message); });\r\n}\r\n\r\nexport const onDelete = (staffId) => (dispatch) => {\r\n    return fetch(`${baseUrl}staffs/${staffId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json' \r\n            }\r\n        })\r\n        .then(response => {\r\n                if(response.ok) {\r\n                    return response;\r\n                }\r\n                else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.message);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            }, \r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n            .then(response => response.json())\r\n            .then(staffs => dispatch(addStaffs(staffs)))\r\n            .then(() => dispatch(fetchStaffsSalary()))\r\n            .then(() => dispatch(fetchDepartments()))\r\n            .catch(error => dispatch(staffsFailed(error.message)))\r\n};\r\n\r\nexport const fetchStaffs = () => (dispatch) => {\r\n    dispatch(departmentsLoading(true));\r\n\r\n    return fetch(baseUrl + 'staffs')\r\n        .then(response =>{\r\n                if(response.ok) {\r\n                    return response;\r\n                }\r\n                else{\r\n                    var error = new Error('Error ' + response.status + ': ' + response.message);\r\n                    error.response = response;\r\n                    throw error;\r\n                };\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then((response => response.json()))\r\n        .then(staffs => dispatch(addStaffs(staffs)))\r\n        .catch(error => dispatch(staffsFailed(error.message)));\r\n};\r\n\r\n\r\nexport const addStaffs = (staffs) =>({\r\n    type: ActionTypes.ADD_STAFFS,\r\n    payload: staffs\r\n}); \r\n\r\nexport const delStaff = (staff) => ({\r\n    type: ActionTypes.DELETE_STAFF,\r\n    payload: staff\r\n})\r\n\r\nexport const staffsLoading = () => ({\r\n    type: ActionTypes.STAFFS_LOADING,\r\n});\r\n\r\nexport const staffsFailed = (errmess) => ({\r\n    type: ActionTypes.STAFFS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////\r\nexport const fetchDepartments = () => (dispatch) => {\r\n    dispatch(departmentsLoading(true));\r\n\r\n    return fetch(baseUrl + 'departments')\r\n        .then(response =>{\r\n                if(response.ok) {\r\n                    return response;\r\n                }\r\n                else{\r\n                    var error = new Error('Error ' + response.status + ': ' + response.message);\r\n                    error.response = response;\r\n                    throw error;\r\n                };\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then((response => response.json()))\r\n        .then(departments => dispatch(addDepartments(departments)))\r\n        .catch(error => dispatch(departmentsFailed(error.message)));\r\n};\r\n\r\nexport const addDepartments = (departments) => ({\r\n    type: ActionTypes.ADD_DEPARTMENTS,\r\n    payload: departments\r\n});\r\n\r\nexport const departmentsLoading = () => ({\r\n    type: ActionTypes.DEPARTMENTS_LOADING,\r\n});\r\n\r\nexport const departmentsFailed = (errmess) => ({\r\n    type: ActionTypes.DEPARTMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n////////////////////////////////////////////////////////\r\nexport const fetchStaffsSalary = () => (dispatch) => {\r\n    dispatch(staffsSalaryLoading(true));\r\n\r\n    return fetch(baseUrl + 'staffsSalary')\r\n        .then(response =>{\r\n                if(response.ok) {\r\n                    return response;\r\n                }\r\n                else{\r\n                    var error = new Error('Error ' + response.status + ': ' + response.message);\r\n                    error.response = response;\r\n                    throw error;\r\n                };\r\n            },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then((response => response.json()))\r\n        .then(staffsSalary => dispatch(addStaffsSalary(staffsSalary)))\r\n        .catch(error => dispatch(staffsSalaryFailed(error.message)));\r\n};\r\n\r\nexport const addStaffsSalary = (staffsSalary) => ({\r\n    type: ActionTypes.ADD_STAFFSSALARY,\r\n    payload: staffsSalary\r\n});\r\n\r\nexport const staffsSalaryLoading = () => ({\r\n    type: ActionTypes.STAFFSSALARY_LOADING,\r\n});\r\n\r\nexport const staffsSalaryFailed = (errmess) => ({\r\n    type: ActionTypes.STAFFSSALARY_FAILED,\r\n    payload: errmess\r\n});","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Staffs from './StaffsComponent';\r\nimport StaffDetail from './StaffDetailComponent';\r\nimport Department from './DepartmentComponent';\r\nimport StaffOfDepartment from './StaffOfDepartmentComponent';\r\nimport Salary from './SalaryComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { fetchStaffs, fetchDepartments, postStaff, onDelete, fetchStaffsSalary, changeInfo } from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        staffs: state.staffs,\r\n        departments: state.departments,\r\n        homeImage: state.homeImage,\r\n        deptImages: state.deptImages,\r\n        staffsSalary: state.staffsSalary,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postStaff: (name, doB, startDate, departmentId, salaryScale, annualLeave, overTime) => dispatch(postStaff(name, doB, startDate, departmentId, salaryScale, annualLeave, overTime)),\r\n    fetchStaffs: () => {dispatch(fetchStaffs())},\r\n    onDelete: (staffId) => dispatch(onDelete(staffId)),\r\n    fetchDepartments: () => {dispatch(fetchDepartments())},\r\n    fetchStaffsSalary: () => {dispatch(fetchStaffsSalary())},\r\n    changeInfo: (staffId, name, doB, startDate, departmentId, salaryScale, annualLeave, overTime) => dispatch(changeInfo(staffId, name, doB, startDate, departmentId, salaryScale, annualLeave, overTime)),\r\n});\r\n\r\n\r\n// Hàm chỉnh quản lý, truyền các state cho các component con của ứng dụng và điều hướng ứng dụng.\r\nclass Main extends Component {    \r\n\r\n    componentDidMount() {\r\n        this.props.fetchStaffs();\r\n        this.props.fetchDepartments();\r\n        this.props.fetchStaffsSalary();\r\n    }\r\n    \r\n    render() {  \r\n\r\n        const staffs = this.props.staffs;\r\n        const departments = this.props.departments;\r\n        const staffsSalary = this.props.staffsSalary;\r\n        \r\n        const StaffWithId = ({match}) => {\r\n            return (\r\n                <StaffDetail staff={staffs.staffs.find((staff) => parseInt(staff.id, 10) === parseInt(match.params.staffId, 10))}\r\n                            departments = {departments}\r\n                            changeInfo={this.props.changeInfo}\r\n                />\r\n            );\r\n        };\r\n\r\n        const StaffOfDept = ({match}) => {\r\n            return(\r\n                <StaffOfDepartment items={staffs.staffs.filter((item) => item.departmentId === match.params.departmentId)}\r\n                            department={departments.departments.find((item) => item.id === match.params.departmentId)}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (        \r\n            <div>\r\n                <Header/>\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route exact path=\"/staffs\" component={() => <Staffs staffs={staffs} \r\n                                                                            postStaff={this.props.postStaff}\r\n                                                                            onDelete={this.props.onDelete}\r\n                                                                            />}/>\r\n                            <Route path=\"/staffs/:staffId\" component={StaffWithId} />\r\n                            <Route exact path=\"/departments\" \r\n                                component={() => <Department departments={departments} deptImages={this.props.deptImages}/>} /> \r\n                            <Route path=\"/departments/:departmentId\" component={StaffOfDept}/> \r\n                            <Route exact path=\"/salary\" component={() => <Salary staffsSalary={staffsSalary}/>}/> \r\n                            <Redirect to='/staffs'/>\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Staffs = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    staffs: [],\r\n    }, action) => {\r\n        switch(action.type) {\r\n            case ActionTypes.ADD_STAFF:\r\n                return {...state, isLoading: false, errMess: null, staffs: state.staffs.concat(action.payload)}\r\n                \r\n            case ActionTypes.STAFFS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, staffs: []};\r\n                \r\n            case ActionTypes.ADD_STAFFS:\r\n                return {...state, isLoading: false, errMess: null, staffs: action.payload};\r\n                \r\n            case ActionTypes.STAFFS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload, staffs: []};\r\n                \r\n            case ActionTypes.DELETE_STAFF:\r\n                var staff = action.payload;\r\n                var _id = staff.id;\r\n                return {...state, staffs: state.staffs.splice(_id, 1)};\r\n                        \r\n            default:\r\n                return state;\r\n        }\r\n}","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Departments = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        departments: []\r\n    }, action) => {\r\n        switch(action.type) {\r\n            case ActionTypes.ADD_DEPARTMENTS:\r\n                return {...state, isLoading: false, errMess: null, departments: action.payload};\r\n            \r\n            case ActionTypes.DEPARTMENTS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, departments: []};\r\n\r\n            case ActionTypes.DEPARTMENTS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload, departments: []};\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}","export const HOME_IMAGE = {\r\n        id: 0,\r\n        img: '/assets/images/background4.png',\r\n        name: \"background\"\r\n};\r\n\r\nexport const DEPT_IMAGES = [\r\n    {\r\n    id: 'Dept04',\r\n    img: '/assets/images/it-department.png',\r\n    name: 'IT Department',\r\n    },\r\n    {\r\n    id: 'Dept02',\r\n    img: '/assets/images/hr-department.jpg',\r\n    name: 'HR Department',\r\n    },\r\n    {\r\n    id: 'Dept03',\r\n    img: '/assets/images/marketing-department.jpg',\r\n    name: 'Marketing Department',\r\n    },\r\n    {\r\n    id: 'Dept01',\r\n    img: '/assets/images/sale-department.png',\r\n    name: 'Sale Department',\r\n    },\r\n    {\r\n    id: 'Dept05',\r\n    img: '/assets/images/finance-department.jpg',\r\n    name: 'Finance Department',\r\n    },\r\n];\r\n","import { HOME_IMAGE } from '../shared/Image';\r\n\r\nexport const HomeBackground = (state = HOME_IMAGE, action) => {\r\n        switch(action.type) {\r\n            default:\r\n                return state;\r\n        };\r\n};","import { DEPT_IMAGES } from \"../shared/Image\";\r\n\r\nexport const DeptImages = (state = DEPT_IMAGES, action) => {\r\n    switch (action.type){\r\n        default: \r\n            return state;}\r\n};","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const StaffsSalary = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        staffsSalary: []\r\n    }, action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_STAFFSSALARY:\r\n                return {...state, isLoading: false, errMess: null, staffsSalary: action.payload};\r\n            \r\n            case ActionTypes.STAFFSSALARY_LOADING:\r\n                return {...state, isLoading: true, errMess: null, staffsSalary: []};\r\n            \r\n            case ActionTypes.STAFFSSALARY_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload, staffsSalary: []};\r\n            \r\n            default:\r\n                return state;\r\n        }\r\n}","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {ConfigureStore} from './redux/configureStore';\r\nconst store = ConfigureStore();\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <Main />\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Staffs } from './staffs';\r\nimport { Departments } from './departments';\r\nimport { HomeBackground } from './homeBackground';\r\nimport { DeptImages } from './deptImg';\r\nimport { StaffsSalary } from './staffsSalary';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            staffs: Staffs,\r\n            departments: Departments,\r\n            homeImage: HomeBackground,\r\n            deptImages: DeptImages,\r\n            staffsSalary: StaffsSalary,\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n} ","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport '../node_modules/bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}